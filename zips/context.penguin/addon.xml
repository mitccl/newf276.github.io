<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<addon id="context.penguin" version="1.0.4" name="penguin - Global Context Menu Items" provider-name="Newf276">
	<requires>
		<import addon="xbmc.python" version="2.23.0" />
	</requires>
	<extension point="kodi.context.item">
		<menu id="kodi.core.main">
			<item library="contextSettings.py">
				<label>[B][COLOR blue]penguin[/COLOR][/B] - CM Settings</label>
				<visible>
					String.IsEqual(Window(home).Property(context.penguin.settings),true) +
					String.StartsWith(ListItem.path,plugin://plugin.video.penguin/) +
					String.IsEqual(ListItem.Property(ispenguin_widget),true)
				</visible>
			</item>

			<item library="traktManager.py">
				<label>[B][COLOR blue]penguin[/COLOR][/B] - Trakt Manager</label>
				<visible>
					String.IsEqual(Window(home).Property(context.penguin.traktManager),true) +
					String.StartsWith(ListItem.path,plugin://plugin.video.penguin/) +
					String.IsEqual(ListItem.Property(ispenguin_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,season) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>

			<item library="clearProviders.py">
				<label>[B][COLOR blue]penguin[/COLOR][/B] - Clear Providers</label>
				<visible>
					String.IsEqual(Window(home).Property(context.penguin.clearProviders),true) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.penguin/?action=play) +
					String.IsEqual(ListItem.Property(ispenguin_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>

			<item library="clearBookmark.py">
				<label>[B][COLOR blue]penguin[/COLOR][/B] - Clear Item Bookmark</label>
				<visible>
					String.IsEqual(Window(home).Property(context.penguin.clearBookmark),true) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.penguin/?action=play) +
					String.IsEqual(ListItem.Property(ispenguin_widget),true) +
<!-- 					!String.IsEqual(ListItem.Property(resumetime),0) + -->
					!String.IsEqual(ListItem.Property(penguin_resumetime),0) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>

			<item library="rescrape.py">
				<label>[B][COLOR blue]penguin[/COLOR][/B] - Rescrape Item</label>
				<visible>
					String.IsEqual(Window(home).Property(context.penguin.rescrape),true) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.penguin/?action=play) +
					String.IsEqual(ListItem.Property(ispenguin_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>

			<item library="playFromHere.py">
				<label>[B][COLOR blue]penguin[/COLOR][/B] - Play from here</label>
				<visible>
					String.IsEqual(Window(home).Property(context.penguin.playFromHere),true) +
					String.StartsWith(ListItem.path,plugin://plugin.video.penguin/) +
					String.IsEqual(ListItem.Property(ispenguin_widget),true) +
					String.IsEqual(ListItem.dbtype,episode)
				</visible>
			</item>

			<item library="autoPlay.py">
				<label>[B][COLOR blue]penguin[/COLOR][/B] - Auto Play</label>
				<visible>
					String.IsEmpty(Window(home).Property(plugin.video.penguin.autoPlay)) +
					String.IsEqual(Window(home).Property(context.penguin.autoPlay),true) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.penguin/?action=play) +
					String.IsEqual(ListItem.Property(ispenguin_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>

			<item library="sourceSelect.py">
				<label>[B][COLOR blue]penguin[/COLOR][/B] - Source Select</label>
				<visible>
					!String.IsEmpty(Window(home).Property(plugin.video.penguin.autoPlay)) +
					String.IsEqual(Window(home).Property(context.penguin.sourceSelect),true) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.penguin/?action=play) +
					String.IsEqual(ListItem.Property(ispenguin_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>

			<item library="findSimilar.py">
				<label>[B][COLOR blue]penguin[/COLOR][/B] - Find Similar</label>
				<visible>
					String.IsEqual(Window(home).Property(context.penguin.findSimilar),true) +
					String.StartsWith(ListItem.path,plugin://plugin.video.penguin/) +
					String.IsEqual(ListItem.Property(ispenguin_widget),true) +
					[String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>

			<item library="browseSeries.py">
				<label>[B][COLOR blue]penguin[/COLOR][/B] - Browse Series</label>
				<visible>
					String.IsEqual(Window(home).Property(context.penguin.browseSeries),true) +
					String.StartsWith(ListItem.path,plugin://plugin.video.penguin/) +
					String.IsEqual(ListItem.Property(ispenguin_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,tvshow)]
				</visible>
			</item>

			<item library="browseEpisodes.py">
				<label>[B][COLOR blue]penguin[/COLOR][/B] - Browse Episodes</label>
				<visible>
					String.IsEqual(Window(home).Property(context.penguin.browseEpisodes),true) +
					String.StartsWith(ListItem.path,plugin://plugin.video.penguin/) +
					String.IsEqual(ListItem.Property(ispenguin_widget),true) +
					String.IsEqual(ListItem.dbtype,episode)
				</visible>
			</item> -->

		</menu>
	</extension>
	<extension point="xbmc.addon.metadata">
		<summary lang="en">penguin - This Addon is currently in beta. Please be aware there may be bugs present</summary>
		<description lang="en">Adds Global Contextual Menu Items for penguin menu items throughout Kodi
		</description>
		<platform>all</platform>
		<license>GNU GENERAL PUBLIC LICENSE. Version 3, 29 June 2007</license>
		<forum></forum>
		<website></website>
		<source></source>
		<disclaimer lang="en"></disclaimer>
		<assets>
			<icon>icon.png</icon>
			<fanart>fanart.png</fanart>
		</assets>
		<news>
[B][COLOR red]Update - v1.0.4 - May 8, 2020[/COLOR][/B]
[COLOR yellow]--[/COLOR][I] Added "Clear Item Bookmark".  This will only show for items
    with a bookmark and will clear just that item only.[/I]
		</news>
	</extension>
</addon>
<?xml version="1.0" encoding="UTF-8"?>
<addons>
<addon id="plugin.video.shadow"
	   name="Shadow"
	   version="1.8.8"
	   provider-name="Darkness">
  <requires>
    <import addon="xbmc.python" version="2.1.0"/>
	<import addon="script.module.requests"/>
  </requires>
  <extension point="xbmc.python.pluginsource"
            library="default.py">
        <provides>video</provides>
  </extension>
  <extension point="xbmc.addon.metadata">
    <summary lang="en">The single light in the Darkness</summary>
    <description lang="en">All the media as fast as possiable</description>
	<disclaimer lang="en_US"> Thanks to Nixgates for parts of his code</disclaimer>
    <platform>all</platform>
  </extension>
</addon>

<addon id="plugin.video.penguin" version="3000.0.1" name="Penguin" provider-name="New276">

	<requires>
		<import addon="xbmc.python" version="2.19.0" />
		<import addon="script.module.requests" version="2.19.1" />
		<import addon="script.module.beautifulsoup4" version="4.5.3"/>
		<import addon="script.module.metahandler" version="2.9.0" />
		<import addon="plugin.video.youtube" version="6.2.0"/>
		<import addon="script.module.resolveurl" version="5.0.27"/>
		<import addon="script.module.openscrapers" />
		<import addon="script.module.addon.signals" version="0.0.3"/>
		<import addon="context.penguin" version="1.0.0"/>
	</requires>

	<extension point="xbmc.python.pluginsource" library="penguin.py">
		<provides>video</provides>
	</extension>

	<extension point="xbmc.service" library="service.py" start="startup" />
	<extension point="xbmc.python.module" library="resources/lib/"/>

	<extension point="xbmc.addon.metadata">
		<reuselanguageinvoker>false</reuselanguageinvoker> <!-- You can enable this if you want, expect some instability but much faster menu speeds -->
		<summary lang="en">We do not host any of the contents streamed</summary>
		<description lang="en">[B][COLOR yellow]penguin[/COLOR][/B][CR] This addon does not form part of the Kodi Media Centre. Please do not seek assistance with this addon from any of the Official Kodi Support Channels.[CR]The author does not host any of the content in this addon and takes no responsibility for content found</description>
		<platform>all</platform>
		<license>GNU GENERAL PUBLIC LICENSE. Version 3, 29 June 2007</license>
		<forum></forum>
		<website>https://github.com/Newf276/plugin.video.penguin</website>
		<source>https://github.com/Newf276/plugin.video.penguin</source>
		<disclaimer lang="en">The author of this addon do not host any of the content which is found and have no affiliation with any of the content providers. This addon simply searches websites for content. Use at your own risk!</disclaimer>
		<assets>
			<icon>icon.png</icon>
			<fanart>fanart.jpg</fanart>
			<screenshot>resources/screenshots/screenshot001.jpg</screenshot>
			<screenshot>resources/screenshots/screenshot002.jpg</screenshot>
			<screenshot>resources/screenshots/screenshot003.jpg</screenshot>
		</assets>
		<news> First edition.</news>
	</extension>
</addon>

<addon id="script.extendedinfo" name="OpenInfo-Meta" version="3100.0.1" provider-name="Newf276">
	<requires>
		<import addon="xbmc.python" version="2.25.0"/>
		<import addon="script.module.pil" version="1.1.7"/>
		<import addon="plugin.video.youtube" version="6.2.2"/>
		<import addon="script.module.requests" version="2.9.1"/>
		<import addon="script.skin.helper.service" version="1.0.0"/>
		<import addon="resource.images.studios.white" version="0.0.18"/>
	</requires>
	<extension point="xbmc.python.script" library="script.py"/>
	<extension point="xbmc.python.pluginsource" library="plugin.py">
		<provides>video</provides>
	</extension>
	<extension point="kodi.context.item">
		<menu id="kodi.core.main">
			<item library="context.py">
				<label>OpenInfo</label>
				<visible>String.IsEqual(ListItem.dbtype,movie) | String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,season) | String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,actor) | String.IsEqual(ListItem.dbtype,director)</visible>
			</item>
		</menu>
	</extension>
	<extension point="xbmc.addon.metadata">
		<reuselanguageinvoker>false</reuselanguageinvoker>
		<platform>all</platform>
		<summary>Fork of the ExtendedInfo script/OpenInfo from phil65/vitor07/A4K. Thank you all for the amazing coding work.</summary>
		<description>This script offers various possibilities to display online content inside skins as well as a complete MovieDB browser including info dialogs for various media types. Needs skin implementation for lot of functions and Script Meta for library and player functions.</description>
		<assets>
			<icon>resources/icon.png</icon>
			<fanart>resources/fanart.jpg</fanart>
			<screenshot>resources/screenshot1.jpg</screenshot>
			<screenshot>resources/screenshot2.jpg</screenshot>
			<screenshot>resources/screenshot3.jpg</screenshot>
		</assets>
		<news>3100.0.1 Fixed for Script Meta</news>
	</extension>
</addon>

<addon id="context.penguin" version="1.0.4" name="penguin - Global Context Menu Items" provider-name="Newf276">
	<requires>
		<import addon="xbmc.python" version="2.23.0" />
	</requires>
	<extension point="kodi.context.item">
		<menu id="kodi.core.main">
			<item library="contextSettings.py">
				<label>[B][COLOR blue]penguin[/COLOR][/B] - CM Settings</label>
				<visible>
					String.IsEqual(Window(home).Property(context.penguin.settings),true) +
					String.StartsWith(ListItem.path,plugin://plugin.video.penguin/) +
					String.IsEqual(ListItem.Property(ispenguin_widget),true)
				</visible>
			</item>

			<item library="traktManager.py">
				<label>[B][COLOR blue]penguin[/COLOR][/B] - Trakt Manager</label>
				<visible>
					String.IsEqual(Window(home).Property(context.penguin.traktManager),true) +
					String.StartsWith(ListItem.path,plugin://plugin.video.penguin/) +
					String.IsEqual(ListItem.Property(ispenguin_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,season) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>

			<item library="clearProviders.py">
				<label>[B][COLOR blue]penguin[/COLOR][/B] - Clear Providers</label>
				<visible>
					String.IsEqual(Window(home).Property(context.penguin.clearProviders),true) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.penguin/?action=play) +
					String.IsEqual(ListItem.Property(ispenguin_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>

			<item library="clearBookmark.py">
				<label>[B][COLOR blue]penguin[/COLOR][/B] - Clear Item Bookmark</label>
				<visible>
					String.IsEqual(Window(home).Property(context.penguin.clearBookmark),true) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.penguin/?action=play) +
					String.IsEqual(ListItem.Property(ispenguin_widget),true) +
<!-- 					!String.IsEqual(ListItem.Property(resumetime),0) + -->
					!String.IsEqual(ListItem.Property(penguin_resumetime),0) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>

			<item library="rescrape.py">
				<label>[B][COLOR blue]penguin[/COLOR][/B] - Rescrape Item</label>
				<visible>
					String.IsEqual(Window(home).Property(context.penguin.rescrape),true) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.penguin/?action=play) +
					String.IsEqual(ListItem.Property(ispenguin_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>

			<item library="playFromHere.py">
				<label>[B][COLOR blue]penguin[/COLOR][/B] - Play from here</label>
				<visible>
					String.IsEqual(Window(home).Property(context.penguin.playFromHere),true) +
					String.StartsWith(ListItem.path,plugin://plugin.video.penguin/) +
					String.IsEqual(ListItem.Property(ispenguin_widget),true) +
					String.IsEqual(ListItem.dbtype,episode)
				</visible>
			</item>

			<item library="autoPlay.py">
				<label>[B][COLOR blue]penguin[/COLOR][/B] - Auto Play</label>
				<visible>
					String.IsEmpty(Window(home).Property(plugin.video.penguin.autoPlay)) +
					String.IsEqual(Window(home).Property(context.penguin.autoPlay),true) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.penguin/?action=play) +
					String.IsEqual(ListItem.Property(ispenguin_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>

			<item library="sourceSelect.py">
				<label>[B][COLOR blue]penguin[/COLOR][/B] - Source Select</label>
				<visible>
					!String.IsEmpty(Window(home).Property(plugin.video.penguin.autoPlay)) +
					String.IsEqual(Window(home).Property(context.penguin.sourceSelect),true) +
					String.StartsWith(ListItem.FolderPath,plugin://plugin.video.penguin/?action=play) +
					String.IsEqual(ListItem.Property(ispenguin_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>

			<item library="findSimilar.py">
				<label>[B][COLOR blue]penguin[/COLOR][/B] - Find Similar</label>
				<visible>
					String.IsEqual(Window(home).Property(context.penguin.findSimilar),true) +
					String.StartsWith(ListItem.path,plugin://plugin.video.penguin/) +
					String.IsEqual(ListItem.Property(ispenguin_widget),true) +
					[String.IsEqual(ListItem.dbtype,tvshow) | String.IsEqual(ListItem.dbtype,movie)]
				</visible>
			</item>

			<item library="browseSeries.py">
				<label>[B][COLOR blue]penguin[/COLOR][/B] - Browse Series</label>
				<visible>
					String.IsEqual(Window(home).Property(context.penguin.browseSeries),true) +
					String.StartsWith(ListItem.path,plugin://plugin.video.penguin/) +
					String.IsEqual(ListItem.Property(ispenguin_widget),true) +
					[String.IsEqual(ListItem.dbtype,episode) | String.IsEqual(ListItem.dbtype,tvshow)]
				</visible>
			</item>

			<item library="browseEpisodes.py">
				<label>[B][COLOR blue]penguin[/COLOR][/B] - Browse Episodes</label>
				<visible>
					String.IsEqual(Window(home).Property(context.penguin.browseEpisodes),true) +
					String.StartsWith(ListItem.path,plugin://plugin.video.penguin/) +
					String.IsEqual(ListItem.Property(ispenguin_widget),true) +
					String.IsEqual(ListItem.dbtype,episode)
				</visible>
			</item> -->

		</menu>
	</extension>
	<extension point="xbmc.addon.metadata">
		<summary lang="en">penguin - This Addon is currently in beta. Please be aware there may be bugs present</summary>
		<description lang="en">Adds Global Contextual Menu Items for penguin menu items throughout Kodi
		</description>
		<platform>all</platform>
		<license>GNU GENERAL PUBLIC LICENSE. Version 3, 29 June 2007</license>
		<forum></forum>
		<website></website>
		<source></source>
		<disclaimer lang="en"></disclaimer>
		<assets>
			<icon>icon.png</icon>
			<fanart>fanart.png</fanart>
		</assets>
		<news>
[B][COLOR red]Update - v1.0.4 - May 8, 2020[/COLOR][/B]
[COLOR yellow]--[/COLOR][I] Added "Clear Item Bookmark".  This will only show for items
    with a bookmark and will clear just that item only.[/I]
		</news>
	</extension>
</addon>

<addon id="repository.newf" name="Newf Repository" version="3.0" provider-name="newf276">
<extension point="xbmc.addon.repository" name="Newf Repository">
        <dir>
            <info compressed="false">https://raw.githubusercontent.com/newf276/newf276.github.io/master/zips/addons.xml</info>
            <checksum>https://raw.githubusercontent.com/newf276/newf276.github.io/master/zips/addons.xml.md5</checksum>
            <datadir zip="true">https://raw.githubusercontent.com/newf276/newf276.github.io/master/zips/</datadir>
        </dir>
        <dir>
			<info compressed="false">https://raw.githubusercontent.com/123Venom/zips/master/addons.xml</info>
			<checksum>https://raw.githubusercontent.com/123Venom/zips/master/addons.xml.md5</checksum>
			<datadir zip="true">https://raw.githubusercontent.com/123Venom/zips/master/</datadir>
		</dir>
		<dir>
			<info compressed="false">https://raw.githubusercontent.com/drinfernoo/repository.openwizard/master/zips/addons.xml</info>
			<checksum>https://raw.githubusercontent.com/drinfernoo/repository.openwizard/master/zips/addons.xml.md5</checksum>
			<datadir zip="true">https://raw.githubusercontent.com/drinfernoo/repository.openwizard/master/zips/</datadir>
		</dir>
		<dir>
			<info compressed="false">https://raw.githubusercontent.com/a4k-openproject/repository.openscrapers/master/zips/addons.xml</info>
			<checksum>https://raw.githubusercontent.com/a4k-openproject/repository.openscrapers/master/zips/addons.xml.md5</checksum>
			<datadir zip="true">https://raw.githubusercontent.com/a4k-openproject/repository.openscrapers/master/zips/</datadir>
		</dir>
		<dir>
			<info compressed="false">https://raw.githubusercontent.com/Gujal00/smrzips/master/addons.xml</info>
			<checksum>https://raw.githubusercontent.com/Gujal00/smrzips/master/addons.xml.md5</checksum>
			<datadir zip="true">https://raw.githubusercontent.com/Gujal00/smrzips/master/zips/</datadir>
		</dir>
    </extension>
    <extension point="xbmc.addon.metadata">
        <summary>Newf Repository</summary>
        <description>My personal addons. Updateed to V3.0</description>
        <disclaimer>Use at your own risk</disclaimer>
        <platform>all</platform>
        <assets>
            <icon>icon.png</icon>
            <fanart>fanart.jpg</fanart>
        </assets>
    </extension>
</addon>

<addon id="screensaver.weather" name="Weather Screensaver" version="100.5.0" provider-name="drinfernoo">
    <requires>
        <import addon="xbmc.python" version="2.14.0"/>
    </requires>

    <extension point="xbmc.ui.screensaver" library="default.py"/>

    <extension point="xbmc.addon.metadata">
        <summary lang="en">Weather Screensaver</summary>
        <description lang="en">Screensaver that displays the weather.</description>
        <platform>all</platform>
        <license>See LICENSE.txt</license>
        <news>v100.5.0 (2020-02-12)[CR]- Massive cleanup</news>
        <assets>
            <icon>icon.png</icon>
            <fanart>fanart.jpg</fanart>
        </assets>
    </extension>
</addon>

<addon id="plugin.video.seren" version="1.6.19" name="Seren" provider-name="Nixgates">
	<requires>
		<import addon="xbmc.python" version="2.25.0" />
		<import addon="script.module.requests" version="2.19.1" />
		<import addon="script.module.beautifulsoup4" version="4.5.3"/>
		<import addon="plugin.video.youtube" version="6.2.0"/>
		<import addon="script.module.dateutil" version="2.7.3"/>
	</requires>
	<extension point="xbmc.python.pluginsource" library="seren.py">
		<provides>video</provides>
	</extension>
	<extension point="xbmc.service" library="service.py" />
	<extension point="xbmc.addon.metadata">
		<reuselanguageinvoker>false</reuselanguageinvoker> <!-- You can enable this if you want, expect some instability but much faster menu speeds -->
		<summary lang="en">Seren - Modular Multi-source Addon</summary>
		<description lang="en"> Seren is a modular provider based, cloud service streaming software that is tightly interwoven with Trakt. Seren provides the freedom to view media from a single menu system from service providers of the users choosing. Please Note: This addon requires the use of a compatible cloud service.
		</description>
		<platform>all</platform>
		<license>GNU GENERAL PUBLIC LICENSE. Version 3, 29 June 2007</license>
		<forum></forum>
		<website>https://github.com/nixgates/plugin.video.seren</website>
		<source>https://github.com/nixgates/plugin.video.seren</source>
		<disclaimer lang="en">
			Last updated: September 09, 2019.
			The information contained within the Seren software (the "Service") is for general information purposes only.
			The author assumes no responsibility for errors, omissions in the contents on the Service, nor does it assume responsibility for any material provided by any external services.
			The use of the Service does not authorise the user to engage in any kind of illegal, criminal or tortious activity through the use of the software, including infringement of any third party intellectual property rights (including without limitation copyright, trade marks, patent, trade secrets and confidential information), fraud, child pornography, trafficking in obscene material, violation of applicable export restrictions, drug dealing, gambling, harassment, stalking, spamming, hacking, sending of viruses or other harmful files or illegal posting of computer passwords or computer code.
			The user is responsible for all their activity in connection with the use of the Service and the author reserves the right to report any potentially criminal activity to appropriate law enforcement agencies.
			The user must not transmit to or via the Service, any material that may infringe the intellectual property rights of any third party, or any defamatory, derogatory or offensive material or publication.
			In no event shall the author of this software be liable for any special, direct, indirect, consequential, or incidental damages or any damages whatsoever, whether in an action of contract, negligence or other tort, arising out of or in connection with the use of the Service or the contents of the Service.
			The author reserves the right to make additions, deletions, or modification to the contents on the Service at any time without prior notice.
			The author of this software does not warrant that the software is free of viruses or other harmful components.
			Seren may contain links to external websites that are not provided or maintained by or in any way affiliated with the author.
			Please note that the author does not guarantee the accuracy, relevance, timeliness, or completeness of any information on these external websites.
		</disclaimer>
		<assets>
			<icon>ico-fox-gold-final.png</icon>
			<fanart>fanart-fox-gold-final.png</fanart>
			<screenshot>resources/screenshots/screenshot-01.jpg</screenshot>
			<screenshot>resources/screenshots/screenshot-02.jpg</screenshot>
			<screenshot>resources/screenshots/screenshot-03.jpg</screenshot>
		</assets>
		<news>
Changelog 1.6.19:
Actually fixed alldebrid this time, promise

Changelog 1.6.18:
Fixed extraction of magnet ID in AllDebrid module when resolving single file items

Changelog 1.6.17:
Update AllDebrid module for new API version

Changelog 1.6.16:
Fix response.status_code check for Trakt Auth

Changelog 1.6.15:
Adjsut status code responses for Trakt module

Changelog 1.6.14:
Remove cleaning of depricated settings as it was causing corrupt settings file

Changelog 1.6.13:
Add workaround on failure to grab user lists

Changelog 1.6.12:
Fix endpoint for still watching and playing next windows

Changelog 1.6.11:
Fix provider list not showing due to theme changes

Changelog 1.6.10:
Increased concurrent threads for Trakt Sync database to speed up large menu lists
Fixed movie view by ID setting not displaying
Fix TypeError when a manual update check is performed and no providers are installed.
Added monkey patch of requests to allow cancellation of provider requests after we have exited getSources keepalive
Added support to inform providers to shutdown
Force lists to sync against trakts dates instead of local
Fix marking watched on specials if no episodes are present
Re-factored marking as watched for shows/seasons to speed up process
Randomize service run time to avoid conflicting schedules
More py3 compatibility fixes
Zip file handling fixes due to issues with py3 compat
Extended logging in RD resolving to allow better identification of issues

Changelog 1.6.9:
Fixed AllDebrid Cache check mistake during py3 compatibility changes

Changelog 1.6.8:
Tighten and speed up PM cloud file inspection
Multiple fixes to TMDb module
buildSimpleTorrentInfo now more safe for shows that lack information
Added compatibility for Trakt usernames with non ASCII characters
Created new regex method for identifying files inside a pack
Premiumize resolver now uses regex method
Real Debrid resolver now uses regex method
Reworked RD cache check method to use new new methods created
Cleaned up Real Debrid resolver method
Cleaned up Premiumize resolver method
Genre lists now use the trending endpoint to provide more current/relevant titles
Fix possible double resolving of source in source select if not using auto-try next source
Fixed Play from random point not clearing playing items from playlist

Changelog 1.6.7:
Fix season sort due to stringed season number from TMDb module

Changelog 1.6.6:
Fix Fanart.tv call for movies

Changelog 1.6.5:
Fixed shows not syncing due to oddly formatted season information
Fix MyFiles link resolving
Fix All Debrid menu structuring in MyFiles
Added more filtering to cache assist to provide a more relevant source
Moved TMDb indexer to default meta provider for show items
Added try/except/finally to _remove_old_meta_items in sync activities to ensure database cursor is closed on failure

Changelog 1.6.4:
Trakt requests now automatically re-try in the event of remote server failures
Fixed issue with some movies not being marked as collected during sync
Catch stringed NoneType values in database.py
Resolver now returns None if cancelled, regardless if resolving was successful
File size limits are now enabled by default (10GB)
Fixed settings cleanup method (missmatch settings error)
Fixed MyFiles for All Debrid
Seperated cloud services within MyFiles

Changelog 1.6.3:
Fixed backwards compatibility for older Seren list urls
Movie titles now confirm against IMDB before scrape
Stop triggering Oauth refresh on 401 errors
Next up sort style now requires Trakt Auth
All Debrid magnets are now removed from account after resolving is complete
Fixed source size possibly displaying multiple times in resolver window
Rescrape now only applies to initial playlist item
Fixed ability to backout of Hide Item selection in Trakt manager
Fixed Trakt lists with same name being mixed up
Trakt list titles now also append the username

Changelog 1.6.2:
Fixed trakt database rebuild issues

Changelog 1.6.1:
Fix playback for RD items in My Files
Fix Trakt Sync Databsae not upgrading correctly
Fixed Trakt lists missing items
Settings dialog now closes during PM auth
Fixed double database rebuilding
Fixed AllDebrid movie resolving
Fix list comprehension error in check_for_updates method in skin_manager module

Changelog 1.6.0:
Some Greek translations added
Some German translations added
Next Up menu now generated completely locally using DB query
Added All-Debrid Support
Premiumize now uses O-Auth (re-auth is required)
Complete re-work of the standard playlist building (removes building playlist window for standard playback)
Re-work of My Files module to reduce spaghetti
Re-work of resolver module to reduce spaghetti
New Custom Windows Still Watching/Play Next
Added update support for Seren Themes
Removed support for UpNext addon
Lists are now synced to the trakt database
More work on player.py module, better bookmark identification and playback marking
Re-work Trakt Manager to be more context sensitive
Added ability to paginate Trakt lists
Added some more shortcuts to the search menu
Show information is confirmed with IMDB prior to scrape
Date and time in custom windows now displays in regional format
Added fallbacks for shows meta gathering in Trakt DB
Source filtering improvements to reduce meta loss
Set a timeout for Fanart.tv calls (reduces slow downs at cost of artwork)
Re-worked intial trakt sync and removed dialog box
Complete overhaul of the bookmark system
Fixed torrent semaphore not being released
Playback parameters are now applied to further episodes
Implement new listall endpoint for Premiumize cloud scraping (decreased scrape times)
More minor bugfixes (honestly could not list them all)
		</news>
	</extension>
</addon>

<addon id="context.seren" version="1.0.4" name="Seren - Global Context Menu Items" provider-name="Nixgates">
	<requires>
		<import addon="xbmc.python" version="2.23.0" />
	</requires>
	<extension point="kodi.context.item">
        <menu id="kodi.core.main">
			<item library="quickResume.py">
				<label>Quick Resume Show</label>
				<visible>String.StartsWith(ListItem.path,plugin://plugin.video.seren/)+String.IsEqual(ListItem.dbtype,tvshow)</visible>
			</item>
            <item library="shuffle.py">
                <label>Shuffle Play</label>
                <visible>String.StartsWith(ListItem.path,plugin://plugin.video.seren/)+[String.IsEqual(ListItem.dbtype,tvshow)|String.IsEqual(ListItem.dbtype,episode)]</visible>
            </item>
			<item library="playFromRandomPoint.py">
                <label>Play From Random Episode</label>
                <visible>String.StartsWith(ListItem.path,plugin://plugin.video.seren/)+String.IsEqual(ListItem.dbtype,tvshow)</visible>
            </item>
			<item library="rescrape.py">
                <label>Rescrape Item</label>
                <visible>String.StartsWith(ListItem.path,plugin://plugin.video.seren/)+[String.IsEqual(ListItem.dbtype,episode)|String.IsEqual(ListItem.dbtype,movie)]</visible>
            </item>
			<item library="sourceSelect.py">
                <label>Source Select</label>
                <visible>String.StartsWith(ListItem.path,plugin://plugin.video.seren/)+[String.IsEqual(ListItem.dbtype,episode)|String.IsEqual(ListItem.dbtype,movie)]</visible>
            </item>
			<item library="findSimilar.py">
                <label>Find Similar</label>
                <visible>String.StartsWith(ListItem.path,plugin://plugin.video.seren/)+[String.IsEqual(ListItem.dbtype,tvshow)|String.IsEqual(ListItem.dbtype,movie)]</visible>
            </item>
			<item library="browseShow.py">
                <label>Browse Show</label>
                <visible>String.StartsWith(ListItem.path,plugin://plugin.video.seren/)+[String.IsEqual(ListItem.dbtype,episode)|String.IsEqual(ListItem.dbtype,tvshow)]</visible>
            </item>
			<item library="browseSeason.py">
				<label>Browse Season</label>
				<visible>String.StartsWith(ListItem.path,plugin://plugin.video.seren/)+String.IsEqual(ListItem.dbtype,episode)</visible>
			</item>
			<item library="traktManager.py">
				<label>Trakt Manager</label>
				<visible>String.StartsWith(ListItem.path,plugin://plugin.video.seren/)+[String.IsEqual(ListItem.dbtype,episode)|String.IsEqual(ListItem.dbtype,tvshow)|String.IsEqual(ListItem.dbtype,season)|String.IsEqual(ListItem.dbtype,movie)]</visible>
			</item>
        </menu>
    </extension>
	<extension point="xbmc.addon.metadata">
		<summary lang="en">Seren - This Addon is currently in beta. Please be aware there may be bugs present</summary>
		<description lang="en">Adds Global Contextual Menu Items for Seren menu items throughout Kodi
		</description>
		<platform>all</platform>
		<license>GNU GENERAL PUBLIC LICENSE. Version 3, 29 June 2007</license>
		<forum></forum>
		<website></website>
		<source></source>
		<disclaimer lang="en"></disclaimer>
		<assets>
			<icon>ico-fox-gold-final.png</icon>
			<fanart>fanart-fox-gold-final.png</fanart>
		</assets>
		<news>
Changelog 1.0.4:
Remove plugin.video.seren Dependency
Added Quick Resume option
Added Play From Random Episode option

Changelog 1.0.3:
Updated artwork to match Seren

Changelog 1.0.2:
Fixed Re-scrape item not working on smartplay items
Fixed Source Select not working on smartplay items
Fixed shuffle play for episode items

Changelog 1.0.1:
Trakt Manager now supports new Seren URL format

Changelog 1.0.0:
Support for Seren 1.0.0

Changelog 0.8:
Fixed missing season number

Changelog 0.7
Updated Trakt Manager to support Seasons

Changelog Version 0.5:
Fixed Source Select (Changed built-in function to PlayMedia)

Changelog Version 0.4:
Trakt Manager now available for season objects

Changelog Version 0.3:
Fixed Shuffle play on continue watching items
Added Browse Show for TV show items
Removed Torrent File Select - Moved to internal seren Menus only
Added Trakt Manager
		</news>
	</extension>
</addon>

<addon id="repository.nixgates" name="Nixgates Repo" version="1.0.0" provider-name="Nixgates">
	<extension point="xbmc.addon.repository" name="Nixgates Repo">
		<info compressed="false">https://raw.githubusercontent.com/nixgates/nixgates/master/packages/addons.xml</info>
		<checksum>https://raw.githubusercontent.com/nixgates/nixgates/master/packages/addons.xml.md5</checksum>
		<datadir zip="true">https://raw.githubusercontent.com/nixgates/nixgates/master/packages</datadir>
	</extension>
	<extension point="xbmc.addon.metadata">
		<summary>Nixgates</summary>
		<description>Nixgates Repository</description>
		<disclaimer></disclaimer>
		<platform>all</platform>
	</extension>
</addon>

<addon id="plugin.audio.iheart"
       name="iHeartRadio"
       version="0.0.6"
       provider-name="divingmule">
  <requires>
    <import addon="xbmc.python" version="2.1.0"/>
    <import addon="script.module.beautifulsoup" version="3.2.1"/>
    <import addon="script.common.plugin.cache" version="2.5.6"/>
  </requires>
  <extension point="xbmc.python.pluginsource" library="default.py">
    <provides>audio</provides>
  </extension>
  <extension point="xbmc.addon.metadata">
    <summary>Live radio over the internet</summary>
    <description>
    Listen to more than 1,500 live radio stations from coast-to-coast including pop, country, urban, rock, talk, and college.[CR]
    Browse radio stations by music genre and location.[CR]
    Read more: http://news.iheart.com/about/
    </description>
    <platform>all</platform>
    <language>en</language>
    <license>GNU GENERAL PUBLIC LICENSE. Version 2, June 1991</license>
    <source>https://github.com/divingmule/plugin.audio.iheart</source>
    <forum>http://forum.xbmc.org/showthread.php?tid=170721</forum>
    <website>http://iheart.com</website>
    <disclaimer>These Streams will only work from a U.S. IP address.</disclaimer>
  </extension>
</addon>

<addon id="script.meta" name="Meta" version="3100.0.1" provider-name="Newf276">
	<requires>
		<import addon="xbmc.python" version="2.25.0"/>
		<import addon="script.module.futures" version="2.2.0"/>
		<import addon="script.module.requests" version="2.9.1"/>
		<import addon="script.module.requests-cache" version="0.4.13"/>
	</requires>
	<extension point="xbmc.python.pluginsource" library="addon.py">
		<provides>video</provides>
	</extension>
	<extension point="xbmc.service" library="service.py" start="login"/>
	<extension point="kodi.context.item">
		<menu id="kodi.core.main">
			<item library="context.py">
				<label>Meta</label>
				<visible>String.IsEqual(ListItem.dbtype,movie) | String.IsEqual(ListItem.dbtype,episode)</visible>
			</item>
		</menu>
	</extension>
	<extension point="xbmc.addon.metadata">
		<reuselanguageinvoker>false</reuselanguageinvoker>
		<platform>all</platform>
		<summary>Fork of OpenMeta/Meta script from A4K/vitor07. Thank you both for all the greeat work.</summary>
		<description>This script offers various possibilities to display online content inside skins as well as a complete MovieDB browser including info dialogs for various media types.Player files required, and OpenInfo-Meta for extra information.</description>
		<assets>
			<icon>resources/icon.png</icon>
			<fanart>resources/fanart.jpg</fanart>
			<screenshot>resources/screenshot000.jpg</screenshot>
			<screenshot>resources/screenshot001.jpg</screenshot>
			<screenshot>resources/screenshot002.jpg</screenshot>
		</assets>
	</extension>
</addon>
</addons>
